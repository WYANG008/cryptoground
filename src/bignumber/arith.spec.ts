
import * as bigintConversion from 'bigint-conversion'
import * as bigintModArith from 'bigint-mod-arith'

describe("inverse mod", () => {

    it("modInv", () => {
        expect(bigintModArith.modInv(
            13n,
            26131807320476657957421424182288162447419281254826669191795753908069080967393745284122896492307513202331213406554016424688857797563779021943347469515297863121943932222860814742636850947355930835367830213996534895799410424482404529555734990330510183897810122165283765782923935855656435054415658319352412790726683786750361691985521848159657251698793638491897836418594350753611329796278737064726112764491008602395562038812545920454118617098031871387301621307805829098564876980304638933231247643039197428484414676047952481655176831620290872157435520153579686606586103185978904236825525831106111980112575713602329182422800n
        ).toString()
        ).toEqual("18091251221868455508984062895430266309751810099495386363550906551740132977426439042854312956212893755460070819922011370938440013698000861345394401972129289853653491538903640975671666040477182886023882455843754927861130293872433905077047300998045511929253161499042607080485801746223685806903148067243978085887704160057942709836130510264378097329934057417467732905180704367884766782039125660195001144647621340120004488408685637237466734914022064806593430136173266299006453294057057723006248368257905912027671698802428641145891652660201373032070744721709013804559609897985395240879210190765769832385629340186227895523477")

        expect(bigintModArith.modInv(
            13n,
            bigintConversion.hexToBigint("00cf00f84055788480bcbf7eb13bdc0a0e37bcf4e5f4079f34dcae501c2e68958dd02e1cc71bf388e70413f0a7fc77467831f1e73e5dbe92bafccdcc07c632f118b601886b55bb6a524b7a1eb501d7f3f769624c55cabbd5b802e5d6127778116089adc2971356350afa0f00ce372c2efae914147e991bff5ec320ebb2e19c1efd61ea10636d492691b4e58c4ba87ba5f60ebf3e6848907df7ee05fdffbd36d003343976a0ae077b9272df0f5cacd983ae29179e46aa33f1b939f978ad2309db89c04406904993976c20f159b92d100bc0475969e627412c977e9b1b177ccc9e4f4051a1c2efaee2f7be285e1bf8cf042ed72154bd035d5ed07a84e479696b4710")
        ).toString()
        ).toEqual("18091251221868455508984062895430266309751810099495386363550906551740132977426439042854312956212893755460070819922011370938440013698000861345394401972129289853653491538903640975671666040477182886023882455843754927861130293872433905077047300998045511929253161499042607080485801746223685806903148067243978085887704160057942709836130510264378097329934057417467732905180704367884766782039125660195001144647621340120004488408685637237466734914022064806593430136173266299006453294057057723006248368257905912027671698802428641145891652660201373032070744721709013804559609897985395240879210190765769832385629340186227895523477")

    })
})